// This GUI file is generated by guibuilder version 4.2.1
//////////
f=figure('figure_position',[340,32],'figure_size',[959,602],'auto_resize','on','background',[33],'figure_name','Graphic window number %d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.main_left_panel=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0,0.0053191,0.2346072,0.9946809],'Relief','default','SliderStep',[0.01,0.1],'String','Left Panel','Style','frame','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','main_left_panel','Callback','')

handles.plot_3d= /*uicontrol(f,...
"sytle","frame",...
"layout","border",...
"constraints",createConstraints("border","center"));*/newaxes();/*f.immediate_drawing = "off";plot3d();*/handles.plot_3d.margins = [ 0 0 0 0];handles.plot_3d.axes_bounds = [0.2993631,0.2103546,0.6528662,0.6914894];handles.plot_3d.data_bounds = [0,0,0,0];


handles.logouisi=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0042463,0.8741135,0.2261146,0.1223404],'Relief','default','SliderStep',[0.01,0.1],'String','D:/logouisi2.png','Style','image','Value',[1,1,0,0,0],'VerticalAlignment','middle','Visible','on','Tag','logouisi','Callback','logouisi_callback(handles)')

handles.filler_panel_up=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.2346072,0.8014184,0.7632696,0.1985816],'Relief','default','SliderStep',[0.01,0.1],'String','UnName4','Style','frame','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','filler_panel_up','Callback','')

//'Position',[0.029724,0.3093617,0.1581741,0.0638298],

handles.slider_plot=uicontrol(f,"style", "slider", "Max", 255, "Min", 1, "value", 128, "position", [10 180 200 25],'Callback','slider_plot_callback(handles)')

handles.text_panel_input=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','bold','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.017431,0.7039007,0.1942675,0.0567376],'Relief','default','SliderStep',[0.01,0.1],'String','Panel Input','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_panel_input','Callback','')
handles.text_panel_control=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','bold','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0350318,0.4097872,0.1528662,0.0602837],'Relief','default','SliderStep',[0.01,0.1],'String','Panel Control','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_panel_control','Callback','')
handles.text_rotasi=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.066518,0.3714184,0.096603,0.0336879],'Relief','default','SliderStep',[0.01,0.1],'String','---rotasi plot---','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_rotasi','Callback','')

handles.text_simluasi_plot_3d=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[15],'FontUnits','points','FontWeight','bold','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3390446,0.8114894,0.4579618,0.0992908],'Relief','default','SliderStep',[0.01,0.1],'String','Simulasi Penggunaan Tanah Pemakaman','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_simluasi_plot_3d','Callback','')

handles.input_x1=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0323355,0.61,0.0488323,0.0531915],'Relief','default','SliderStep',[0.01,0.1],'String','X','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','input_x1','Callback','')
handles.input_x2=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0892569,0.6099291,0.0498938,0.0549645],'Relief','default','SliderStep',[0.01,0.1],'String','Y','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','input_x2','Callback','')
handles.input_x3=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1512739,0.6110638,0.0498938,0.0531915],'Relief','default','SliderStep',[0.01,0.1],'String','Z','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','input_x3','Callback','')

handles.input_simulasikan=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0624416,0.5131915,0.1082803,0.0443262],'Relief','default','SliderStep',[0.01,0.1],'String','Simulasikan !','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','input_simulasikan','Callback','input_simulasikan_callback(handles)')

handles.input_reset=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1224416,0.0131915,0.0882803,0.0543262],'Relief','default','SliderStep',[0.01,0.1],'String','Reset','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','input_reset','Callback','input_reset_callback(handles)')

handles.input_close=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[1,0,0],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0124416,0.0131915,0.0882803,0.0543262],'Relief','default','SliderStep',[0.01,0.1],'String','close','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','input_close','Callback','input_close_callback(handles)')


handles.text_tampilan=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0643949,0.2841844,0.1019108,0.0265957],'Relief','default','SliderStep',[0.01,0.1],'String','---tampilan plot---','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_tampilan','Callback','')
handles.check_tampilan_judul=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0251805,0.2329078,0.118896,0.0319149],'Relief','default','SliderStep',[0.01,0.1],'String','Judul Plot','Style','checkbox','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','check_tampilan_judul','Callback','check_tampilan_judul_callback(handles)')
handles.check_tampian_label=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0257325,0.1968085,0.1157113,0.0283688],'Relief','default','SliderStep',[0.01,0.1],'String','Label Plot','Style','checkbox','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','check_tampian_label','Callback','check_tampian_label_callback(handles)')
handles.check_tampilan_edge=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1183652,0.2340426,0.1157113,0.0301418],'Relief','default','SliderStep',[0.01,0.1],'String','Edge Plot','Style','checkbox','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','check_tampilan_edge','Callback','check_tampilan_edge_callback(handles)')
/*handles.text_warna=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0691507,0.1519858,0.111465,0.0265957],'Relief','default','SliderStep',[0.01,0.1],'String','---warna plot---','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_warna','Callback','')
handles.radio_warna_jetcolor=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0227176,0.106383,0.1125265,0.0460993],'Relief','default','SliderStep',[0.01,0.1],'String','Jet colormap','Style','radiobutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','radio_warna_jetcolor','Callback','radio_warna_jetcolor_callback(handles)')
handles.radio_warna_hotcolor=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.023397,0.074539,0.1210191,0.0336879],'Relief','default','SliderStep',[0.01,0.1],'String','Hot colormap','Style','radiobutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','radio_warna_hotcolor','Callback','radio_warna_hotcolor_callback(handles)')
handles.radio_warna_graycolor=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.123397,0.1119858,0.118896,0.037234],'Relief','default','SliderStep',[0.01,0.1],'String','Gray colormap','Style','radiobutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','radio_warna_graycolor','Callback','radio_warna_graycolor_callback(handles)')*/

handles.text_informatika_uisi=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','bold','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.646875,0.88125,0.5046875,0.1475],'Relief','default','SliderStep',[0.01,0.1],'String','Informatika UISI','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','text_informatika_uisi','Callback','')

handles.nama_nim=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.772766,0.8053938,0.2851064,0.0736842],'Relief','default','SliderStep',[0.01,0.1],'String','Dandy Nizam Achmady - 3011710014','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','nama_nim','Callback','')

handles.frame_style = uicontrol(f,"style", "frame", "Max", 255, "Min", 1, "value", 128, "position", [10 70 200 25], "callback","update_model")
    handles.frame_style.layout = "grid";
    uicontrol(handles.frame_style,...
       "style","radiobutton",...
       "backgroundcolor",[1 1 1],...
       "tag","model3D",...
       "string","3D Model",...
       "groupname","model_style",...
       "callback","update_model");

      
               
 model2d =  uicontrol(handles.frame_style,...
       "style","radiobutton",...
       "backgroundcolor",[1 1 1],...
       "tag","model2D",...
       "string","2D Model",...
       "groupname","model_style",...
       "callback","update_model");
  model2d.value = 1;
f.visible = "on";




//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////

function logouisi_callback(handles)
//Write your callback for  logouisi  here

endfunction

function update_model(handles)
   
    plot_axes = gca();
    my_figure = gcf();
    if get(gcbo,"tag") == "model3D" then
         
      /*t=[1:i+1];
      t=[0:0.3:2*%pi]';
      z=sin(t)*cos(t');*/
     // my_figure.color_map = jetcolormap(128);
    e = 2.718281828;
b = 3.125;
c = 1;
a =- 0.05; // percepatan kematian dikarenakan ada vaktor tambahan seperti wabah
A = 0;
delta_t = 0.2;
    //plot3d(A,L,V)
      X(1) = eval(get(handles.input_x1,"string")); //tekanan aerodinamis awal saat ketinggian pesawat 0 m
      Y(1) = eval(get(handles.input_x2,"string")); //kecepatan vertical omega di rubah menjadi variable V
      Z(1) =eval(get(handles.input_x3,"string"));
    for i=1:25
        X(i+1) = X(i) + (a*X(i)) *delta_t;
        Y(i+1) = Y(i) + (Y(i)+b*a*X(i))*delta_t;
        Z(i + 1) = Z(i) + ((A - Y(i) + c*(-Y(i))))*delta_t;
    end
    delete(gca());
  handles.plot_3d= /*uicontrol(f,...
"sytle","frame",...
"layout","border",...
"constraints",createConstraints("border","center"));*/newaxes();/*f.immediate_drawing = "off";plot3d();*/handles.plot_3d.margins = [ 0 0 0 0];handles.plot_3d.axes_bounds = [0.2993631,0.2103546,0.6528662,0.6914894];handles.plot_3d.data_bounds = [0,0,0,0];
    t=[1:i]';
   // z = X(t) * Y(t');
    
    
     plot3d(X(t'),Y(t),Z(t'))
       

    elseif get(gcbo,"tag") == "model2D"  then
        

     X(1) = eval(get(handles.input_x1,"string")); //tekanan aerodinamis awal saat ketinggian pesawat 0 m
     Y(1) = eval(get(handles.input_x2,"string")); //kecepatan vertical omega di rubah menjadi variable V
     Z(1) = eval(get(handles.input_x3,"string"));

//W = 1000; //kg
//g = 10;  //m/s
//
e = 2.718281828;
b = 3.125;
//c = 1;
a = 0.05; // percepatan kematian dikarenakan ada vaktor tambahan seperti wabah
delta_t = 1;
c = e^a*delta_t;
T = 3;
A = (1-c/a*delta_t) * ((b*a*X(1)*e^a*delta_t)/(a-1)) + ((1-c/e^T)*Y(1)*e^delta_t);
//A = 0;
 delete(gca());
  handles.plot_3d= /*uicontrol(f,...
"sytle","frame",...
"layout","border",...
"constraints",createConstraints("border","center"));*/newaxes();/*f.immediate_drawing = "off";plot3d();*/handles.plot_3d.margins = [ 0 0 0 0];handles.plot_3d.axes_bounds = [0.2993631,0.2103546,0.6528662,0.6914894];handles.plot_3d.data_bounds = [0,0,0,0];
for i=1:25
        X(i+1) = X(i) + (a*X(i)) *delta_t;
        Y(i+1) = Y(i) + (Y(i)+b*a*X(i))*delta_t;
        Z(i + 1) = Z(i) + ((A - Y(i) + c*(-Y(i))))*delta_t;
end//t=[1:i+1];
//t=[0:0.3:2*%pi]';
//z=sin(t)*cos(t');
t=[1:i];

   handles.plot_3d;
   //plot3d(A,L,V)
  // plot3d(X(t),Y(t),Z(t))

   plot2d(t,[X(t),Y(t),Z(t)])

   h1 = legend(['X (Jumlah Kematian Selama Pandemi)','Y (Jumlah, Lahan Pemakaman yang di isi )','Z (Jumlah Lahan Yang Tersedia)'])
   xlabel("waktu","fontsize",2)
   ylabel("ketersediaan tanah","fontsize",2)
   zlabel("coba","fontsize",2)
   title(' Pengunaan Tanah Makam',"fontsize",3)
      
    end
endfunction

function slider_plot_callback(handles)
//Write your callback for  slider_plot  here
handles plot_3d;
my_plot_axes = gca();
my_new_angle = get(gcbo,"value");
if(my_new_angle > 0 & my_new_angle<360)then
    my_plot_axes.rotation_angles(2) = my_new_angle;
end
endfunction


function input_simulasikan_callback(handles)
//Write your callback for  input_simulasikan  here
  delete(gca());
  handles.plot_3d= /*uicontrol(f,...
"sytle","frame",...
"layout","border",...
"constraints",createConstraints("border","center"));*/newaxes();/*f.immediate_drawing = "off";plot3d();*/handles.plot_3d.margins = [ 0 0 0 0];handles.plot_3d.axes_bounds = [0.2993631,0.2103546,0.6528662,0.6914894];handles.plot_3d.data_bounds = [0,0,0,0];


X(1) = eval(get(handles.input_x1,"string")); //tekanan aerodinamis awal saat ketinggian pesawat 0 m
Y(1) = eval(get(handles.input_x2,"string")); //kecepatan vertical omega di rubah menjadi variable V
Z(1) = eval(get(handles.input_x3,"string"));

//W = 1000; //kg
//g = 10;  //m/s
//
e = 2.718281828;
b = 3.125;
a = 0.05; // percepatan kematian dikarenakan ada vaktor tambahan seperti wabah
delta_t = 1;
c = e^a*delta_t;
T = 3;
//A = (1-c/a*delta_t) * ((b*a*X(1)*e^a*delta_t)/(a-1)) + ((1-c/e^T)*Y(1)*e^delta_t);
A = 0;
for i=1:25
  X(i+1) = X(i) + (a*X(i)) *delta_t;
  Y(i+1) = Y(i) + (Y(i)+b*a*X(i))*delta_t;
  Z(i + 1) = Z(i) + ((A - Y(i) + c*(-Y(i))))*delta_t;


end
//t=[1:i+1];
//t=[0:0.3:2*%pi]';
//z=sin(t)*cos(t');
t=[1:i+1];

   handles.plot_3d;
   //plot3d(A,L,V)
  // plot3d(X(t),Y(t),Z(t))
   plot2d(t,[X(t),Y(t),Z(t)])
   h1 = legend(['X (Jumlah Kematian Selama Pandemi)','Y (Jumlah, Lahan Pemakaman yang di isi )','Z (Jumlah Lahan Yang Tersedia)'])
   xlabel("waktu","fontsize",2)
   ylabel("penggunaan lahan","fontsize",2)
   zlabel("coba","fontsize",2)
   title(' Pengunaan Tanah Makam',"fontsize",3)
   xlabel.visible= "off"

endfunction


function check_tampilan_judul_callback(handles)
//Write your callback for  check_tampilan_judul  here

plot_axes = gca();

if get(gcbo,"value") == 0 then
    plot_axes.x_title_visible = "off";
   // plot_axes.z_label_visible = off;
elseif get(gcbo,"value") == 1 then
     plot_axes.x_title_visible = "on";

   // plot_axes.z_label_visble = on;
end
endfunction


function check_tampian_label_callback(handles)
//Write your callback for  check_tampian_label  here
plot_axes = gca();

if get(gcbo,"value") == 0 then
    plot_axes.x_label_visible = "off";
    plot_axes.y_label_visible = "off";
   // plot_axes.z_label_visible = off;
elseif get(gcbo,"value") == 1 then
     plot_axes.x_label_visible = "on";
    plot_axes.y_label_visible = "on";
   // plot_axes.z_label_visible = on;
end
endfunction


function check_tampilan_edge_callback(handles)
//Write your callback for  check_tampilan_edge  here
plot_axes = gca();
my_plot_3d = plot_axes.children($)
if get(gcbo,"value") == 0 then
    pmy_plot_3d.color_mode = -1;
elseif get(gcbo,"value") == 1 then
    my_plot_3d.color_mode = +1;
end
endfunction

function input_close_callback(handles)
    close();
end

function input_reset_callback(handles)

/*a=get("plot_3d") 
delete(); 
delete(a.children); 
delete(a); 
delete("all");*/

/*current_axes = gca();
delete_axes = scf(current_axes.background);
clf(gca(),"reset"); */

  set(handles.input_x1,"string","X");
  set(handles.input_x2,"string","Y");
  set(handles.input_x3,"string","Z");
delete(gca());
handles.plot_3d= /*uicontrol(f,...
"sytle","frame",...
"layout","border",...
"constraints",createConstraints("border","center"));*/newaxes();/*f.immediate_drawing = "off";plot3d();*/handles.plot_3d.margins = [ 0 0 0 0];handles.plot_3d.axes_bounds = [0.2993631,0.2103546,0.6528662,0.6914894];handles.plot_3d.data_bounds = [0,0,0,0];


end


/*function radio_warna_jetcolor_callback(handles)
//Write your callback for  radio_warna_jetcolor  here
//handles plot_3d
my_figure = gcf();
my_figure.color_map = jetcolormap(128);
endfunction


function radio_warna_hotcolor_callback(handles)
//Write your callback for  radio_warna_hotcolor  here
my_figure = gcf();
my_figure.color_map = jetcolormap(128);
endfunction


function radio_warna_graycolor_callback(handles)
//Write your callback for  radio_warna_graycolor  here
my_figure = gcf();
my_figure.color_map = jetcolormap(128);
endfunction*/


